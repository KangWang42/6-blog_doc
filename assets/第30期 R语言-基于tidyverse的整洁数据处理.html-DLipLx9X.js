import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as n,o as l}from"./app-D00vkK85.js";const t={};function e(h,i){return l(),a("div",null,i[0]||(i[0]=[n(`<blockquote><p>第30期 本期主要介绍在使用R语言进行数据整洁化的常用函数及说明</p></blockquote><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h2><p>[TOC]</p><h2 id="整洁数据基础说明" tabindex="-1"><a class="header-anchor" href="#整洁数据基础说明"><span>整洁数据基础说明</span></a></h2><h3 id="整洁和不整洁数据的特点" tabindex="-1"><a class="header-anchor" href="#整洁和不整洁数据的特点"><span>整洁和不整洁数据的特点</span></a></h3><ul><li>不整洁数据 <ul><li>首行不是变量名而是数值</li><li>多个变量在一列</li><li>变量既在行也在列</li><li>多种类型的观测单元在同一个单元格</li><li>一个观测单元格放在多个表</li></ul></li><li>整洁数据的特点 <ul><li>每个<strong>变量</strong>构成一列</li><li>每个<strong>观测</strong>构成一行</li><li>每个观测的每个变量<strong>值</strong>构成一个单元格</li></ul></li><li>整洁数据的图示 <ul><li><img src="https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231210205509.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></li></ul></li></ul><h3 id="为什么要变成整洁数据" tabindex="-1"><a class="header-anchor" href="#为什么要变成整洁数据"><span>为什么要变成整洁数据</span></a></h3><ul><li>数据处理需要 <ul><li>大多数<strong>函数的对象是针对变量进行</strong>。数据框可以看作多个向量（每个向量是一个变量）</li><li>整洁数据才能保证数据的清洗准确而不波及其它</li></ul></li><li>可视化需要 <ul><li>可视化图的ggplot包需要<strong>整洁数据</strong>才能进行可视化</li><li>比如研究国别与经济水平的差异。国别作为横轴（柱状图），就需要国别单独作为一个分类变量。而不能是把不同国家放在不同列里</li></ul></li></ul><h3 id="整洁数据需要哪些操作" tabindex="-1"><a class="header-anchor" href="#整洁数据需要哪些操作"><span>整洁数据需要哪些操作</span></a></h3><ul><li>长宽表转化</li><li>拆分/合并列</li><li>方形化</li></ul><h3 id="典型概念之长表和宽表" tabindex="-1"><a class="header-anchor" href="#典型概念之长表和宽表"><span>典型概念之长表和宽表</span></a></h3><ul><li>长表之所以长是因为<strong>将变量名作为变量值</strong>，实现了长度加长</li><li>宽表之所以宽是由于<strong>将变量值作为变量名</strong>，变量增多，实现宽度增宽</li><li>典型的整洁数据应该是要减少变量名，增加变量行。即宽变长，在各个分析里更为实用</li></ul><h3 id="实例说明" tabindex="-1"><a class="header-anchor" href="#实例说明"><span>实例说明</span></a></h3><h4 id="加载包" tabindex="-1"><a class="header-anchor" href="#加载包"><span>加载包</span></a></h4><div class="language-r line-numbers-mode" data-highlighter="shiki" data-ext="r" data-title="r" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#install.packages(tidyverse)  第一次使用要安装</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">library</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tidyverse)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="新建不整洁数据" tabindex="-1"><a class="header-anchor" href="#新建不整洁数据"><span>新建不整洁数据</span></a></h4><p>新建数据框记录同学及成绩情况</p><div class="language-r line-numbers-mode" data-highlighter="shiki" data-ext="r" data-title="r" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">score_data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> data.frame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">  observation</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;王(康)&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;李(卫)&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;张(强)&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  公卫_预防医学导论=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">70</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  临床_临床概论=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>数据为不整洁数据 <ul><li>姓和名作为不同变量可以进行列拆分</li><li>需要研究人和各学科成绩之间的关系，需要把成绩作为变量放在一列。把学科情况放另一列</li><li>使用<strong>tidyr包进行重塑</strong>（tidyverse导入的时候就会自动加载）</li></ul></li></ul><h4 id="进行数据重塑" tabindex="-1"><a class="header-anchor" href="#进行数据重塑"><span>进行数据重塑</span></a></h4><p>数据框的宽表变长表</p><div class="language-r line-numbers-mode" data-highlighter="shiki" data-ext="r" data-title="r" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">score_data %&gt;% </span><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">pivot_longer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">  -</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">observation,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">  names_to</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;学院&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;学科&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">  names_sep</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;_&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>函数说明 <ul><li><strong><code>score_data %&gt;%</code></strong>: 这里使用了管道操作符<code>%&gt;%</code>，它是<code>dplyr</code>包的特色之一。<code>%&gt;%</code>允许你将左边的结果传递给右边的函数，使代码更易于阅读和编写。在这里，<code>score_data</code>这个数据框被传递给了<code>pivot_longer()</code>函数。</li><li><strong><code>pivot_longer(-observation, ...)</code></strong>: <code>pivot_longer()</code>函数用于将数据从宽格式转换为长格式。在这个函数中，<code>-observation</code>表示所有除了<code>observation</code>列之外的列都将被转换。这里的负号<code>-</code>是排除的意思，意味着不对<code>observation</code>列进行操作。</li><li><strong><code>names_to = c(&quot;学院&quot;,&quot;学科&quot;)</code></strong>: 这个参数指定了新数据框中变量名的名称。在转换成长格式时，原始数据中的列名（那些除了<code>observation</code>以外的列）将被放入这两个新列中。这里，原始列名将被分割为两部分，分别存入<code>学院</code>和<code>学科</code>两个新列</li><li><strong><code>names_sep=&quot;_&quot;</code></strong>: 这个参数指定了在原始列名中用于分割的分隔符。在这里，<code>_</code>被用作分隔符。这意味着函数将查找原始列名中的下划线，并在那里将列名分割成两部分。</li></ul></li></ul><h4 id="数据框转换前后比较" tabindex="-1"><a class="header-anchor" href="#数据框转换前后比较"><span>数据框转换前后比较</span></a></h4><figure><img src="https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231210211723.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>总结要点 <ul><li>宽表的特点是：表比较宽，本来该是” 值” 的，却出现在” 变量（名） “中。这就需要给它变到” 值” 中，新起个列名存为一列，即宽表变长表</li><li>数据框由宽变长，将<strong>变量名转换为变量值</strong>，行数增多。</li><li>转换出的列数由<strong>names_to</strong>的值决定，names即产生新变量名个数</li></ul></li></ul><h2 id="整洁化函数实例" tabindex="-1"><a class="header-anchor" href="#整洁化函数实例"><span>整洁化函数实例</span></a></h2><h3 id="长宽表转换" tabindex="-1"><a class="header-anchor" href="#长宽表转换"><span>长宽表转换</span></a></h3><h4 id="宽表变长表" tabindex="-1"><a class="header-anchor" href="#宽表变长表"><span>宽表变长表</span></a></h4><div class="language-r line-numbers-mode" data-highlighter="shiki" data-ext="r" data-title="r" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">pivot_longer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		data, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		cols, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		names_to, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		values_to, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		values_drop_na, </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">...</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数说明 <ul><li><strong>data</strong>: 要重塑的数据框</li><li>cols: 用选择列语法选择要变形的列</li><li>names_to: 为存放变形列的列名中的”值”，指定新列名（变量）</li><li>values_to: 为存放变形列中的”值”，指定新列名</li><li>values_drop_na: 是否忽略变形列中的NA</li></ul></li><li>注 <ul><li>若变形列的列名除了”值” 外，还包含前缀、变量名 + 分隔符、正则表达式分组捕获模式，则可以借助参数 names_prefix, <strong>names_sep</strong>, names_pattern来提取出”值”（实现长变宽及分列的作用）</li></ul></li></ul><p>参考实例</p><div class="language-r line-numbers-mode" data-highlighter="shiki" data-ext="r" data-title="r" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">data_score </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">data.frame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">  name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;王康&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">  score_2018</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">90</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">  score_2019</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">  score_2020</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">40</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">data_score</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">tidy_data_score </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> data_score %&gt;% </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">  pivot_longer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    cols</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    names_to</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;其它&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;时间&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    values_to</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;分数&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    names_sep</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;_&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">tidy_data_score</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231210213941.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="长表变宽表" tabindex="-1"><a class="header-anchor" href="#长表变宽表"><span>长表变宽表</span></a></h4><p>长表的特点是：表比较长。有时候需要将分类变量的若干水平值，变成变量（列名）。这就是长表变宽表：</p><p>使用<strong>pivot_wider函数</strong></p><div class="language-r line-numbers-mode" data-highlighter="shiki" data-ext="r" data-title="r" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">pivot_wider</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            id_cols, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            names_from, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            values_from, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            values_fill, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">...</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数说明 <ul><li>data: 要重塑的数据框</li><li>id_cols: 唯一识别观测的列，默认是除了 names_from 和 values_from 指定列之外的列</li><li><strong>names_from</strong>: 指定列名来自哪个变量列 （也就是哪列要作为变量，一般是分类变量）</li><li>values_from: 指定列”值” 来自哪个变量列</li><li>values_fill: 若变宽后单元格值缺失，设置用何值填充</li></ul></li></ul><p>实例说明</p><div class="language-r line-numbers-mode" data-highlighter="shiki" data-ext="r" data-title="r" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">tidy_data_score %&gt;% </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">  pivot_wider</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    names_from</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;时间&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    values_from</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;分数&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  )</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231210214624.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="列的拆分与合并" tabindex="-1"><a class="header-anchor" href="#列的拆分与合并"><span>列的拆分与合并</span></a></h3><h4 id="列的拆分" tabindex="-1"><a class="header-anchor" href="#列的拆分"><span>列的拆分</span></a></h4><p>一列根据分隔符变成多列，但行数不变</p><p>使用seperate函数</p><div class="language-r line-numbers-mode" data-highlighter="shiki" data-ext="r" data-title="r" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">separate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		 col, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		 into, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		 sep, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">...</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数说明 <ul><li>data，数据框，在管道符传递中可忽略</li><li>col，需要拆分的行</li><li>sep，拆分的依据（分割符）</li><li>into，为拆分后的行起名</li></ul></li></ul><p>实例说明</p><div class="language-r line-numbers-mode" data-highlighter="shiki" data-ext="r" data-title="r" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">score_data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> data.frame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">  observation</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;王(康)&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;李(卫)&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;张(强)&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  公卫_预防医学导论=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">70</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  临床_临床概论=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用到了正则表达式，之后会更</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">score_data %&gt;% </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">  separate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">col</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">observation,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">           sep</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">(&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">           into</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;姓&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;名&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231210215537.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="列的合并" tabindex="-1"><a class="header-anchor" href="#列的合并"><span>列的合并</span></a></h4><p>使用<strong>unite函数</strong></p><div class="language-r line-numbers-mode" data-highlighter="shiki" data-ext="r" data-title="r" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">unite</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	  col, </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	  sep, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">...</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数说明 <ul><li>seperate的逆操作</li><li>用分隔符sep将多列合并为一列</li></ul></li></ul><p>实例</p><div class="language-r line-numbers-mode" data-highlighter="shiki" data-ext="r" data-title="r" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">score_data %&gt;% </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">  separate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">col</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">observation,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">           sep</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">(&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">           into</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;姓&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;名&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)) %&gt;% </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">			  unite</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">			    new,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">			    姓,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">			    名,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">			    sep</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;(&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>说明 <ul><li><strong><code>unite(new, century, year, sep = &quot;&quot;)</code></strong>: <code>unite()</code>函数用于将多列合并成一列。在这个例子中，<code>new</code>是合并后新列的名称，<code>century</code>和<code>year</code>是要被合并的两列的名称。</li><li><code>new</code>: 合并后的新列名。</li><li><code>century</code>: 第一个要合并的列。</li><li><code>year</code>: 第二个要合并的列。</li><li><code>sep = &quot;&quot;</code>: 这个参数指定合并时列之间的分隔符。在这里，<code>sep = &quot;&quot;</code>表示在合并<code>century</code>和<code>year</code>这两列时，不在它们之间添加任何分隔符。</li></ul></li></ul><h4 id="行的拆分" tabindex="-1"><a class="header-anchor" href="#行的拆分"><span>行的拆分</span></a></h4><p>使用separate_rows函数对不定长的行进行分行，堆叠放置</p><p>使用与separate接近，<strong>但是是堆叠放置，可等同于拆分行</strong></p><p>实例</p><div class="language-r line-numbers-mode" data-highlighter="shiki" data-ext="r" data-title="r" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">data.frame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">  name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;王康&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">  score</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;这学期还行，下学期努力，吗？&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">data</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">data_sep_rows </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> data %&gt;% </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">  separate_rows</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    score,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    sep</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;，&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">data_sep_rows</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231210221049.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="方形化" tabindex="-1"><a class="header-anchor" href="#方形化"><span>方形化</span></a></h3><p>方形化（Rectangling）是将一个深度嵌套的列表（通常来自 JSON 或 XML）驯服成一个整齐的行和列的数据集。主要通过组合使用以下函数实现</p><ul><li>unnest_longer()：提取列表列的每个元，再按行存放（横向展开）</li><li>unnest_wider()：提取列表列的每个元，再按列存放（纵向展开）</li><li>unnest_auto()：提取列表列的每个元，猜测按行或按列存放</li><li>hoist()：类似 unnest_wider()，但只取出选择的组件，且可以 深入多个层</li></ul><p>方形化的展开嵌套的概念较为难以理解，以下通过实例来具体说明一下</p><ul><li>建立不整洁数据，观察数据特征 <ul><li>data列是不同的因变量对应的数据框(<strong>不同的人检测项目不一样，数据框也不一样。但测过中性粒细胞比率的又一定测过中性粒细胞数</strong>)</li><li>var_y列是数据框中的因变量</li><li>由于var_y列属于不整洁数据，要分析在各个数据框下不同检测指标的情况，需要将var_y列由嵌套的向量转换为方形的块（没有嵌套结构）</li><li><img src="https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231210221907.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></li></ul></li><li>进行方形化 <ul><li>使用unnest_longer的效果与直接unnest一样</li><li><img src="https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231210222403.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></li></ul></li></ul><div class="language-r line-numbers-mode" data-highlighter="shiki" data-ext="r" data-title="r" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#方形化代码，打开嵌套结构</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;-</span><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;"> tibble</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">  var_y</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">dependent2,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">  data</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">list_2_all,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">  group</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">names</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(dependent2)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) %&gt;% </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#61AFEF;">  unnest_longer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(var_y)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h2><ul><li>做好数据整洁化需要补充的知识说明 <ul><li>tidyverse入门知识</li><li><strong>管道符</strong>的使用</li><li><strong>正则化</strong>知识（在不整齐的数据值中<strong>格外实用</strong>）</li></ul></li><li>后续会缓慢更进</li></ul>`,72)]))}const r=s(t,[["render",e],["__file","第30期 R语言-基于tidyverse的整洁数据处理.html.vue"]]),d=JSON.parse('{"path":"/%E4%BB%A3%E7%A0%81%E6%95%99%E7%A8%8B/R%E8%AF%AD%E8%A8%80/%E7%AC%AC30%E6%9C%9F%20R%E8%AF%AD%E8%A8%80-%E5%9F%BA%E4%BA%8Etidyverse%E7%9A%84%E6%95%B4%E6%B4%81%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86.html","title":"第30期 R语言-基于tidyverse的整洁数据处理","lang":"zh-CN","frontmatter":{"类型":"公众号","公众号内容":["代码-R教程"],"rating":["⭐⭐⭐"],"description":"推文写的不好","title":"第30期 R语言-基于tidyverse的整洁数据处理","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E4%BB%A3%E7%A0%81%E6%95%99%E7%A8%8B/R%E8%AF%AD%E8%A8%80/%E7%AC%AC30%E6%9C%9F%20R%E8%AF%AD%E8%A8%80-%E5%9F%BA%E4%BA%8Etidyverse%E7%9A%84%E6%95%B4%E6%B4%81%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"第30期 R语言-基于tidyverse的整洁数据处理"}],["meta",{"property":"og:description","content":"推文写的不好"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231210205509.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-02T10:14:49.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-02T10:14:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第30期 R语言-基于tidyverse的整洁数据处理\\",\\"image\\":[\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231210205509.png\\",\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231210211723.png\\",\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231210213941.png\\",\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231210214624.png\\",\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231210215537.png\\",\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231210221049.png\\",\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231210221907.png\\",\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231210222403.png\\"],\\"dateModified\\":\\"2024-11-02T10:14:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":2,"title":"整洁数据基础说明","slug":"整洁数据基础说明","link":"#整洁数据基础说明","children":[{"level":3,"title":"整洁和不整洁数据的特点","slug":"整洁和不整洁数据的特点","link":"#整洁和不整洁数据的特点","children":[]},{"level":3,"title":"为什么要变成整洁数据","slug":"为什么要变成整洁数据","link":"#为什么要变成整洁数据","children":[]},{"level":3,"title":"整洁数据需要哪些操作","slug":"整洁数据需要哪些操作","link":"#整洁数据需要哪些操作","children":[]},{"level":3,"title":"典型概念之长表和宽表","slug":"典型概念之长表和宽表","link":"#典型概念之长表和宽表","children":[]},{"level":3,"title":"实例说明","slug":"实例说明","link":"#实例说明","children":[]}]},{"level":2,"title":"整洁化函数实例","slug":"整洁化函数实例","link":"#整洁化函数实例","children":[{"level":3,"title":"长宽表转换","slug":"长宽表转换","link":"#长宽表转换","children":[]},{"level":3,"title":"列的拆分与合并","slug":"列的拆分与合并","link":"#列的拆分与合并","children":[]},{"level":3,"title":"方形化","slug":"方形化","link":"#方形化","children":[]}]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]}],"git":{"createdTime":1730542489000,"updatedTime":1730542489000,"contributors":[{"name":"WangKang","email":"888666wang4286@gmail.com","commits":1}]},"readingTime":{"minutes":7.45,"words":2234},"filePathRelative":"代码教程/R语言/第30期 R语言-基于tidyverse的整洁数据处理.md","localizedDate":"2024年11月2日","excerpt":"<blockquote>\\n<p>第30期\\n本期主要介绍在使用R语言进行数据整洁化的常用函数及说明</p>\\n</blockquote>\\n<h2>目录</h2>\\n<p>[TOC]</p>\\n<h2>整洁数据基础说明</h2>\\n<h3>整洁和不整洁数据的特点</h3>\\n<ul>\\n<li>不整洁数据\\n<ul>\\n<li>首行不是变量名而是数值</li>\\n<li>多个变量在一列</li>\\n<li>变量既在行也在列</li>\\n<li>多种类型的观测单元在同一个单元格</li>\\n<li>一个观测单元格放在多个表</li>\\n</ul>\\n</li>\\n<li>整洁数据的特点\\n<ul>\\n<li>每个<strong>变量</strong>构成一列</li>\\n<li>每个<strong>观测</strong>构成一行</li>\\n<li>每个观测的每个变量<strong>值</strong>构成一个单元格</li>\\n</ul>\\n</li>\\n<li>整洁数据的图示\\n<ul>\\n<li><img src=\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231210205509.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></li>\\n</ul>\\n</li>\\n</ul>"}');export{r as comp,d as data};
