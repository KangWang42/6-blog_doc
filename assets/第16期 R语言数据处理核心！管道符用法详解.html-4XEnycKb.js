import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,d as n,o as e}from"./app-D00vkK85.js";const g={};function o(s,i){return e(),t("div",null,i[0]||(i[0]=[n('<blockquote><p>第16期 R语言学习tidyverse包不可避免的就是管道符的大量使用。让结构更加优雅，同时也让流程脉络更加清晰</p></blockquote><h2 id="_1-图示" tabindex="-1"><a class="header-anchor" href="#_1-图示"><span>1 图示</span></a></h2><p>管道符及数据处理</p><figure><img src="https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203133845.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_2-管道符介绍及用法说明" tabindex="-1"><a class="header-anchor" href="#_2-管道符介绍及用法说明"><span>2 管道符介绍及用法说明</span></a></h2><p>管道 %&gt;% 来自于 Stefan Milton Bache 开发的 magrittr 包。因为 tidyverse 中的包会自动加载 %&gt;%，所以通常你无须显式地加载 magrittr。加载tidyverse后即可直接使用</p><p>管道符的作用是<strong>省去中间步骤</strong>，将前一步的结果，作为后一步的输入（第一个参数是data，<strong>tidyverse的框架下大部分都可以满足要求</strong>）。保证了数据的一致和思路的清晰。使得整合式数据处理成为可能</p><p>不使用管道符</p><ul><li>代码中充斥着大量不必要的变量。</li><li>你必须在每一行代码中小心翼翼地修改变量后缀</li></ul><p>使用管道符</p><ul><li>减少了中间变量</li><li>避免因为代码行数过多，出现运行间断。数据多次进行重复处理的情况</li></ul><h2 id="_3-管道符的在tidyverse下的具体实现" tabindex="-1"><a class="header-anchor" href="#_3-管道符的在tidyverse下的具体实现"><span>3 管道符的在tidyverse下的具体实现</span></a></h2><h3 id="代码说明" tabindex="-1"><a class="header-anchor" href="#代码说明"><span>代码说明</span></a></h3><ul><li>只提供展示，不提供原数据，具体数据为个人之前使用过的</li><li>只展示管道符可以<strong>实现的功能和流程</strong>，具体函数说明需要个人积累</li><li>功能仅摘取我一次完整数据处理过程中展示的脉络功能，其它更多操作未涉及</li></ul><h3 id="数据导入及变量选择" tabindex="-1"><a class="header-anchor" href="#数据导入及变量选择"><span>数据导入及变量选择</span></a></h3><figure><img src="https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203134101.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="使用mutate批量转换变量的数据类型" tabindex="-1"><a class="header-anchor" href="#使用mutate批量转换变量的数据类型"><span>使用mutate批量转换变量的数据类型</span></a></h3><figure><img src="https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203134143.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="使用正则表达式批量进行变量重命名" tabindex="-1"><a class="header-anchor" href="#使用正则表达式批量进行变量重命名"><span>使用正则表达式批量进行变量重命名</span></a></h3><p>图示的是删除变量中<strong>括号内的内容</strong></p><figure><img src="https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203134229.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="使用rename进行变量重命名" tabindex="-1"><a class="header-anchor" href="#使用rename进行变量重命名"><span>使用rename进行变量重命名</span></a></h3><figure><img src="https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203134401.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="使用mutate进行变量的重编码" tabindex="-1"><a class="header-anchor" href="#使用mutate进行变量的重编码"><span>使用mutate进行变量的重编码</span></a></h3><figure><img src="https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203135302.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="使用pivot系列函数实现结构重组-重要的整洁化" tabindex="-1"><a class="header-anchor" href="#使用pivot系列函数实现结构重组-重要的整洁化"><span>使用pivot系列函数实现结构重组（重要的整洁化）</span></a></h3><figure><img src="https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203134558.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="使用group-by-summarise实现分组汇总" tabindex="-1"><a class="header-anchor" href="#使用group-by-summarise实现分组汇总"><span>使用group_by＋summarise实现分组汇总</span></a></h3><figure><img src="https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203134631.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203134754.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="结合baser语法-进行数据的展示" tabindex="-1"><a class="header-anchor" href="#结合baser语法-进行数据的展示"><span>结合baseR语法，进行数据的展示</span></a></h3><figure><img src="https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203134739.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="结合ggplot2语法-进行可视化" tabindex="-1"><a class="header-anchor" href="#结合ggplot2语法-进行可视化"><span>结合ggplot2语法，进行可视化</span></a></h3><figure><img src="https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203135119.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="使用join系函数进行数据框的匹配" tabindex="-1"><a class="header-anchor" href="#使用join系函数进行数据框的匹配"><span>使用join系函数进行数据框的匹配</span></a></h3><figure><img src="https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203135346.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="实现批量建模-参考后续purrr包用法" tabindex="-1"><a class="header-anchor" href="#实现批量建模-参考后续purrr包用法"><span>实现批量建模，参考后续purrr包用法</span></a></h3><figure><img src="https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203135610.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="数据的导出" tabindex="-1"><a class="header-anchor" href="#数据的导出"><span>数据的导出</span></a></h3><p><strong>bruceR包函数导出</strong><img src="https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203135202.png" alt="" loading="lazy"></p>',40)]))}const r=a(g,[["render",o],["__file","第16期 R语言数据处理核心！管道符用法详解.html.vue"]]),p=JSON.parse('{"path":"/zotero%E6%95%99%E7%A8%8B/%E7%AC%AC16%E6%9C%9F%20R%E8%AF%AD%E8%A8%80%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%A0%B8%E5%BF%83%EF%BC%81%E7%AE%A1%E9%81%93%E7%AC%A6%E7%94%A8%E6%B3%95%E8%AF%A6%E8%A7%A3.html","title":"第16期 R语言数据处理核心！管道符用法详解","lang":"zh-CN","frontmatter":{"类型":"公众号","公众号内容":"代码-R教程","rating":["⭐⭐⭐"],"简记":"写的推文垃圾","title":"第16期 R语言数据处理核心！管道符用法详解","description":"第16期 R语言学习tidyverse包不可避免的就是管道符的大量使用。让结构更加优雅，同时也让流程脉络更加清晰 1 图示 管道符及数据处理 2 管道符介绍及用法说明 管道 %>% 来自于 Stefan Milton Bache 开发的 magrittr 包。因为 tidyverse 中的包会自动加载 %>%，所以通常你无须显式地加载 magrittr...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/zotero%E6%95%99%E7%A8%8B/%E7%AC%AC16%E6%9C%9F%20R%E8%AF%AD%E8%A8%80%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%A0%B8%E5%BF%83%EF%BC%81%E7%AE%A1%E9%81%93%E7%AC%A6%E7%94%A8%E6%B3%95%E8%AF%A6%E8%A7%A3.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"第16期 R语言数据处理核心！管道符用法详解"}],["meta",{"property":"og:description","content":"第16期 R语言学习tidyverse包不可避免的就是管道符的大量使用。让结构更加优雅，同时也让流程脉络更加清晰 1 图示 管道符及数据处理 2 管道符介绍及用法说明 管道 %>% 来自于 Stefan Milton Bache 开发的 magrittr 包。因为 tidyverse 中的包会自动加载 %>%，所以通常你无须显式地加载 magrittr..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203133845.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-02T10:14:49.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-02T10:14:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第16期 R语言数据处理核心！管道符用法详解\\",\\"image\\":[\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203133845.png\\",\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203134101.png\\",\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203134143.png\\",\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203134229.png\\",\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203134401.png\\",\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203135302.png\\",\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203134558.png\\",\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203134631.png\\",\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203134754.png\\",\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203134739.png\\",\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203135119.png\\",\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203135346.png\\",\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203135610.png\\",\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203135202.png\\"],\\"dateModified\\":\\"2024-11-02T10:14:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"1 图示","slug":"_1-图示","link":"#_1-图示","children":[]},{"level":2,"title":"2 管道符介绍及用法说明","slug":"_2-管道符介绍及用法说明","link":"#_2-管道符介绍及用法说明","children":[]},{"level":2,"title":"3 管道符的在tidyverse下的具体实现","slug":"_3-管道符的在tidyverse下的具体实现","link":"#_3-管道符的在tidyverse下的具体实现","children":[{"level":3,"title":"代码说明","slug":"代码说明","link":"#代码说明","children":[]},{"level":3,"title":"数据导入及变量选择","slug":"数据导入及变量选择","link":"#数据导入及变量选择","children":[]},{"level":3,"title":"使用mutate批量转换变量的数据类型","slug":"使用mutate批量转换变量的数据类型","link":"#使用mutate批量转换变量的数据类型","children":[]},{"level":3,"title":"使用正则表达式批量进行变量重命名","slug":"使用正则表达式批量进行变量重命名","link":"#使用正则表达式批量进行变量重命名","children":[]},{"level":3,"title":"使用rename进行变量重命名","slug":"使用rename进行变量重命名","link":"#使用rename进行变量重命名","children":[]},{"level":3,"title":"使用mutate进行变量的重编码","slug":"使用mutate进行变量的重编码","link":"#使用mutate进行变量的重编码","children":[]},{"level":3,"title":"使用pivot系列函数实现结构重组（重要的整洁化）","slug":"使用pivot系列函数实现结构重组-重要的整洁化","link":"#使用pivot系列函数实现结构重组-重要的整洁化","children":[]},{"level":3,"title":"使用group_by＋summarise实现分组汇总","slug":"使用group-by-summarise实现分组汇总","link":"#使用group-by-summarise实现分组汇总","children":[]},{"level":3,"title":"结合baseR语法，进行数据的展示","slug":"结合baser语法-进行数据的展示","link":"#结合baser语法-进行数据的展示","children":[]},{"level":3,"title":"结合ggplot2语法，进行可视化","slug":"结合ggplot2语法-进行可视化","link":"#结合ggplot2语法-进行可视化","children":[]},{"level":3,"title":"使用join系函数进行数据框的匹配","slug":"使用join系函数进行数据框的匹配","link":"#使用join系函数进行数据框的匹配","children":[]},{"level":3,"title":"实现批量建模，参考后续purrr包用法","slug":"实现批量建模-参考后续purrr包用法","link":"#实现批量建模-参考后续purrr包用法","children":[]},{"level":3,"title":"数据的导出","slug":"数据的导出","link":"#数据的导出","children":[]}]}],"git":{"createdTime":1730542489000,"updatedTime":1730542489000,"contributors":[{"name":"WangKang","email":"888666wang4286@gmail.com","commits":1}]},"readingTime":{"minutes":2.22,"words":667},"filePathRelative":"zotero教程/第16期 R语言数据处理核心！管道符用法详解.md","localizedDate":"2024年11月2日","excerpt":"<blockquote>\\n<p>第16期\\nR语言学习tidyverse包不可避免的就是管道符的大量使用。让结构更加优雅，同时也让流程脉络更加清晰</p>\\n</blockquote>\\n<h2>1 图示</h2>\\n<p>管道符及数据处理</p>\\n<figure><img src=\\"https://pic-go-42.oss-cn-guangzhou.aliyuncs.com/img/20231203133845.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<h2>2 管道符介绍及用法说明</h2>","autoDesc":true}');export{r as comp,p as data};
